% Generated by roxygen2 (4.0.2): do not edit by hand
\name{fullCoverage}
\alias{fullCoverage}
\alias{full_coverage}
\title{Load the unfiltered coverage information from a group of BAM files and a
list of chromosomes}
\usage{
fullCoverage(files, chrs, bai = NULL, chrlens = NULL, outputs = NULL,
  cutoff = NULL, ...)
}
\arguments{
\item{files}{A character vector with the full path to the sample BAM files
(or BigWig files).
The names are used for the column names of the DataFrame. Check
\link{rawFiles} for constructing \code{files}. \code{files} can also be a
\code{BamFileList} object created with \link[Rsamtools]{BamFileList} or a
\code{BigWigFileList} object created with \link[rtracklayer]{BigWigFileList}.}

\item{chrs}{The chromosome of the files to read. The format has to match the
one used in the input files.}

\item{bai}{The full path to the BAM index files. If \code{NULL} it is
assumed that the BAM index files are in the same location as the BAM files
and that they have the .bai extension. Ignored if \code{files} is a
\code{BamFileList} object.}

\item{chrlens}{The chromosome lengths in base pairs. If it's \code{NULL},
the chromosome length is extracted from the BAM files. Otherwise, it should
have the same length as \code{chrs}.}

\item{outputs}{This argument is passed to the \code{output} argument of
\link{loadCoverage}. If \code{NULL} or \code{'auto'} it is then recycled.}

\item{cutoff}{This argument is passed to \link{filterData}.}

\item{...}{Arguments passed to other methods and/or advanced arguments.}
}
\value{
A list with one element per chromosome.
\describe{ Each element is a DataFrame with the coverage information
produced by \link{loadCoverage}.
}
}
\description{
For a group of samples this function reads the coverage information for
several chromosomes directly from the BAM files. Per chromosome, it merges
the unfiltered coverage by sample into a DataFrame. The end result is a list
with one such DataFrame objects per chromosome.
}
\examples{
datadir <- system.file('extdata', 'genomeData', package='derfinder')
files <- rawFiles(datadir=datadir, samplepatt='*accepted_hits.bam$',
    fileterm=NULL)
## Shorten the column names
names(files) <- gsub('_accepted_hits.bam', '', names(files))

## Read and filter the data, only for 1 file
fullCov <- fullCoverage(files=files[1], chrs=c('21', '22'))
fullCov

\dontrun{
## You can then use filterData() to filter the data if you want to.
## Use bplapply() if you want to do so with multiple cores as shown below.
library('BiocParallel')
p <- SnowParam(2L, outfile = Sys.getenv('SGE_STDERR_PATH'))
bplapply(fullCov, function(x) {
    library('derfinder'); filterData(x, cutoff=0) }, BPPARAM = p)
}
}
\author{
Leonardo Collado-Torres
}
\seealso{
\link{loadCoverage}, \link{filterData}
}

